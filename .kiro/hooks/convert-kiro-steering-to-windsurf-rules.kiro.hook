{
  "enabled": true,
  "name": "CONVERT-KIRO-STEERING-TO-WINDSURF-RULES",
  "description": "Converts Kiro steering rules from .kiro/steering directory to Windsurf rules format in .windsurf/rules directory",
  "version": "1",
  "when": {
    "type": "userTriggered",
    "patterns": ["*"]
  },
  "then": {
    "type": "askAgent",
    "prompt": "You are a rule conversion specialist that converts Kiro steering files to Windsurf rules format.\n\n## Conversion Process\n\n1. **Analyze Source Directory**\n   - Examine all `.md` files in `.kiro/steering/` directory\n   - Identify files with `inclusion: always` frontmatter (these are active rules)\n   - Note the content structure and formatting of each file\n\n2. **Prepare Target Directory**\n   - Ensure `.windsurf/rules/` directory exists\n   - Create the directory if it doesn't exist using: `mkdir -p .windsurf/rules`\n\n3. **Convert Each Steering File**\n   For each file in `.kiro/steering/`:\n   \n   a. **Read the source file** and extract:\n      - YAML frontmatter (especially `inclusion` field)\n      - Main content body\n      - File structure and formatting\n   \n   b. **Transform the content**:\n      - Keep the same filename (e.g., `shell-preferences.md`)\n      - **Convert YAML frontmatter** from Kiro format to Windsurf rules format:\n        \n        **From Kiro format:**\n        ```yaml\n        ---\n        inclusion: always\n        ---\n        ```\n        \n        **To Windsurf rules format:**\n        ```yaml\n        ---\n        name: \"[Descriptive Rule Name]\"\n        activation_mode: \"always_on\"  # since inclusion: always\n        description: \"[Natural language description of the rule's purpose]\"\n        ---\n        ```\n        \n      - Generate appropriate `name` based on file content and purpose\n      - Set `activation_mode` to \"always_on\" for files with `inclusion: always`\n      - Create meaningful `description` summarizing the rule's function\n      - Maintain all content formatting and examples\n      - Ensure code blocks and syntax highlighting remain intact\n   \n   c. **Write to target location**:\n      - Save to `.windsurf/rules/[filename].md`\n      - Preserve original formatting and structure\n      - Maintain file permissions\n\n4. **Handle Special Files**\n   - Convert files with spaces in names to dash-separated format if needed\n   - Ensure all rule files have proper YAML frontmatter\n   - Validate that `inclusion: always` is preserved for active rules\n\n5. **Verification Steps**\n   - Confirm all source files have been converted\n   - Verify target files maintain original content integrity\n   - Check that YAML frontmatter is properly formatted\n   - Ensure no content is lost during conversion\n\n## File Mapping Examples\n\n```\n.kiro/steering/shell-preferences.md → .windsurf/rules/shell-preferences.md\n.kiro/steering/spec-generation-standards.md → .windsurf/rules/spec-generation-standards.md\n.kiro/steering/supabase-function-deployment.md → .windsurf/rules/supabase-function-deployment.md\n```\n\n## Frontmatter Conversion Examples\n\n### Shell Preferences\n**From:**\n```yaml\n---\ninclusion: always\n---\n```\n**To:**\n```yaml\n---\nname: \"Fish Shell Execution Standards\"\nactivation_mode: \"always_on\"\ndescription: \"Enforces fish shell syntax for all terminal commands and provides conversion patterns from bash\"\n---\n```\n\n### Spec Generation Standards\n**From:**\n```yaml\n---\ninclusion: always\n---\n```\n**To:**\n```yaml\n---\nname: \"Kiro Specification Generation Requirements\"\nactivation_mode: \"always_on\"\ndescription: \"Mandates creation of comprehensive Kiro specifications for all development plans following the three-file format\"\n---\n```\n\n### Supabase Function Deployment\n**From:**\n```yaml\n---\ninclusion: always\n---\n```\n**To:**\n```yaml\n---\nname: \"Supabase Function Deployment Process\"\nactivation_mode: \"always_on\"\ndescription: \"Defines the standard process for deploying Supabase functions using Docker container operations\"\n---\n```\n\n## Quality Assurance\n\nAfter conversion:\n- Compare file counts between source and target directories\n- Spot-check converted files for content accuracy\n- Verify YAML frontmatter is properly converted to Windsurf format\n- Ensure all rules have proper `name`, `activation_mode`, and `description` fields\n- Validate that `activation_mode` is set to \"always_on\" for files with `inclusion: always`\n- Ensure code examples and formatting remain intact\n- Test that rules are properly recognized by Windsurf\n\n## Notes\n\n- This conversion maintains the exact content and structure of Kiro steering files\n- The primary change is the file location from `.kiro/steering/` to `.windsurf/rules/`\n- All development standards, shell preferences, and project-specific rules are preserved\n- Files with `inclusion: always` frontmatter become active Windsurf rules\n\nExecute this conversion process step by step, ensuring all Kiro steering rules are properly transformed to Windsurf rules format with correct frontmatter and preserved functionality."
  }
}
